{"ast":null,"code":"// src/components/Login.js\nimport React,{useState}from'react';import PasswordRecovery from'./PasswordRecovery';import{signInWithEmailAndPassword,updatePassword,EmailAuthProvider,reauthenticateWithCredential,createUserWithEmailAndPassword,signOut}from'firebase/auth';import{auth,firestore}from'../config/firebase';import{doc,getDoc,updateDoc,query,where,collection,getDocs,setDoc}from'firebase/firestore';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Login=_ref=>{let{onLogin}=_ref;const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[loading,setLoading]=useState(false);const[error,setError]=useState('');const[successMessage,setSuccessMessage]=useState('');// Estados para cambio de contraseña obligatorio\nconst[showChangePassword,setShowChangePassword]=useState(false);const[currentUser,setCurrentUser]=useState(null);const[newPassword,setNewPassword]=useState('');const[confirmPassword,setConfirmPassword]=useState('');const[oldPassword,setOldPassword]=useState('');const[showPasswordRecovery,setShowPasswordRecovery]=useState(false);const handleLogin=async e=>{e.preventDefault();setLoading(true);setError('');setSuccessMessage('');const normalizedEmail=email.toLowerCase().trim();try{// PRIMERO: Verificar si existe una contraseña temporal en Firestore\nconst usersRef=collection(firestore,'users');const q=query(usersRef,where('email','==',normalizedEmail));const querySnapshot=await getDocs(q);if(!querySnapshot.empty){const userDoc=querySnapshot.docs[0];const userFirestoreData=userDoc.data();const userDocId=userDoc.id;// Verificar si hay contraseña temporal\nif(userFirestoreData.tempPassword){try{const tempPasswordDecoded=atob(userFirestoreData.tempPassword);if(password===tempPasswordDecoded){// Login exitoso con contraseña temporal\n// Actualizar última conexión\nawait updateDoc(doc(firestore,'users',userDocId),{lastLogin:new Date().toISOString()});// SOLO marcar para cambio de contraseña si realmente lo requiere\nif(userFirestoreData.requirePasswordChange===true){setCurrentUser({uid:userDocId,email:userFirestoreData.email,role:userFirestoreData.role,name:userFirestoreData.name,...userFirestoreData,isTempPasswordLogin:true});setOldPassword(password);setShowChangePassword(true);setLoading(false);return;}else{// La contraseña ya fue cambiada, continuar con login normal\nonLogin({uid:userDocId,email:userFirestoreData.email,role:userFirestoreData.role,name:userFirestoreData.name,...userFirestoreData});setLoading(false);return;}}}catch(e){// Error decodificando contraseña temporal\n}}}else{// No se encontró usuario en Firestore con ese email\n}// SEGUNDO: Si no es contraseña temporal o no coincide, intentar login normal con Firebase Auth\ntry{const userCredential=await signInWithEmailAndPassword(auth,normalizedEmail,password);const user=userCredential.user;// Obtener datos del usuario desde Firestore usando el UID de Auth\nconst userDoc=await getDoc(doc(firestore,'users',user.uid));if(userDoc.exists()){const userData=userDoc.data();// Verificar si debe cambiar contraseña\nif(userData.requirePasswordChange||userData.firstLogin!==false){// Limpiar flags de contraseña temporal si existen\nif(userData.tempPassword){await updateDoc(doc(firestore,'users',user.uid),{tempPassword:null,lastTempPassword:userData.tempPassword// Guardar para referencia\n});}setCurrentUser({uid:user.uid,email:user.email,role:userData.role,name:userData.name,...userData});setOldPassword(password);setShowChangePassword(true);}else{// Login exitoso - actualizar última conexión\nawait updateDoc(doc(firestore,'users',user.uid),{lastLogin:new Date().toISOString()});// Login normal\nonLogin({uid:user.uid,email:user.email,role:userData.role,name:userData.name,...userData});}}else{setError('No se encontraron datos del usuario');}}catch(authError){// Si falla el login con Firebase Auth, verificar si la contraseña está en Firestore como fallback\nif(authError.code==='auth/invalid-credential'||authError.code==='auth/wrong-password'){// Buscar el usuario en Firestore nuevamente\nconst usersRef=collection(firestore,'users');const q=query(usersRef,where('email','==',normalizedEmail));const querySnapshot=await getDocs(q);if(!querySnapshot.empty){const userDoc=querySnapshot.docs[0];const userFirestoreData=userDoc.data();const userDocId=userDoc.id;// Verificar si hay una contraseña guardada en Firestore (fallback)\nif(userFirestoreData.tempPassword){try{const storedPassword=atob(userFirestoreData.tempPassword);if(password===storedPassword){// Si needsAuthSync es true, intentar sincronizar\nif(userFirestoreData.needsAuthSync===true){// Intentar sincronizar con Firebase Auth\ntry{await createUserWithEmailAndPassword(auth,normalizedEmail,password);const firebaseUser=auth.currentUser;if(firebaseUser&&firebaseUser.uid!==userDocId){// Migrar datos al nuevo UID de Firebase\n// Crear nuevo documento con el UID de Firebase\nawait setDoc(doc(firestore,'users',firebaseUser.uid),{...userFirestoreData,tempPassword:null,// Limpiar contraseña temporal\nneedsAuthSync:false,authPasswordSynced:true,requirePasswordChange:false,lastLogin:new Date().toISOString()});// Cerrar sesión y usar el nuevo UID para el login\nawait signOut(auth);onLogin({uid:firebaseUser.uid,email:userFirestoreData.email,role:userFirestoreData.role,name:userFirestoreData.name,...userFirestoreData,requirePasswordChange:false});}else{// Limpiar flags de sincronización\nawait updateDoc(doc(firestore,'users',userDocId),{tempPassword:null,// Limpiar contraseña temporal ya sincronizada\nneedsAuthSync:false,authPasswordSynced:true,requirePasswordChange:false,lastLogin:new Date().toISOString()});// Cerrar sesión\nif(auth.currentUser){await signOut(auth);}// Login exitoso\nonLogin({uid:userDocId,email:userFirestoreData.email,role:userFirestoreData.role,name:userFirestoreData.name,...userFirestoreData,requirePasswordChange:false});}}catch(syncError){if(syncError.code==='auth/email-already-in-use'){// El usuario ya existe en Auth, continuar sin sincronizar\n}// Actualizar última conexión\nawait updateDoc(doc(firestore,'users',userDocId),{lastLogin:new Date().toISOString()});// Login exitoso con Firestore\nonLogin({uid:userDocId,email:userFirestoreData.email,role:userFirestoreData.role,name:userFirestoreData.name,...userFirestoreData,requirePasswordChange:false});}}else{// No necesita sincronización, login directo\nawait updateDoc(doc(firestore,'users',userDocId),{lastLogin:new Date().toISOString()});onLogin({uid:userDocId,email:userFirestoreData.email,role:userFirestoreData.role,name:userFirestoreData.name,...userFirestoreData,requirePasswordChange:false});}setLoading(false);return;}}catch(e){// Error verificando contraseña de fallback\n}}}}// Si llegamos aquí, el login falló completamente\nthrow authError;}}catch(error){// Mensajes de error en español\nswitch(error.code){case'auth/user-not-found':setError('Usuario no encontrado. Verifica tu email');break;case'auth/wrong-password':setError('Contraseña incorrecta');break;case'auth/invalid-email':setError('Email inválido');break;case'auth/too-many-requests':setError('Demasiados intentos. Intenta más tarde');break;case'auth/invalid-credential':setError('Credenciales inválidas. Verifica tu email y contraseña');break;case'auth/network-request-failed':setError('Error de conexión. Verifica tu internet');break;default:setError('Error al iniciar sesión. Intenta nuevamente');}}finally{setLoading(false);}};const handleChangePassword=async e=>{e.preventDefault();// Validaciones\nif(newPassword.length<6){setError('La contraseña debe tener al menos 6 caracteres');return;}if(newPassword!==confirmPassword){setError('Las contraseñas no coinciden');return;}if(newPassword===oldPassword){setError('La nueva contraseña debe ser diferente a la anterior');return;}// Validación adicional de seguridad\nconst hasNumber=/\\d/.test(newPassword);const hasLetter=/[a-zA-Z]/.test(newPassword);if(!hasNumber||!hasLetter){setError('La contraseña debe contener al menos una letra y un número');return;}setLoading(true);setError('');try{// Verificar si es un login con contraseña temporal\nif(currentUser.isTempPasswordLogin){let authUpdated=false;// ESTRATEGIA MEJORADA: Intentar múltiples métodos para actualizar en Firebase Auth\n// Método 1: Intentar crear el usuario nuevo\ntry{await createUserWithEmailAndPassword(auth,currentUser.email,newPassword);authUpdated=true;// Si se creó exitosamente, obtener el UID real de Firebase Auth\nconst firebaseUser=auth.currentUser;if(firebaseUser){// Actualizar el UID en Firestore si es diferente\nif(currentUser.uid!==firebaseUser.uid){// Copiar datos del documento antiguo al nuevo\nconst oldUserDoc=await getDoc(doc(firestore,'users',currentUser.uid));const oldUserData=oldUserDoc.exists()?oldUserDoc.data():{};// Crear o actualizar el documento con el nuevo UID\nawait setDoc(doc(firestore,'users',firebaseUser.uid),{...oldUserData,email:currentUser.email,requirePasswordChange:false,firstLogin:false,passwordChangedAt:new Date().toISOString(),tempPassword:null,lastTempPassword:null,resetMethod:null,authPasswordSynced:true});// Actualizar el currentUser con el nuevo UID\ncurrentUser.uid=firebaseUser.uid;}else{// Si el UID es el mismo, solo actualizar\nawait updateDoc(doc(firestore,'users',currentUser.uid),{requirePasswordChange:false,firstLogin:false,passwordChangedAt:new Date().toISOString(),tempPassword:null,lastTempPassword:null,resetMethod:null,authPasswordSynced:true});}// Cerrar sesión para hacer un login limpio después\nawait signOut(auth);}}catch(createError){if(createError.code==='auth/email-already-in-use'){// Método 2: El usuario existe, intentar múltiples formas de actualizar\n// Método 2a: Intentar con la última contraseña temporal conocida\nif(currentUser.lastTempPassword){try{const lastTemp=atob(currentUser.lastTempPassword);await signInWithEmailAndPassword(auth,currentUser.email,lastTemp);await updatePassword(auth.currentUser,newPassword);authUpdated=true;// Cerrar sesión para hacer un login limpio después\nawait signOut(auth);}catch(e){// No funcionó con última temporal\n}}// Método 2b: Intentar con la contraseña temporal actual\nif(!authUpdated){try{await signInWithEmailAndPassword(auth,currentUser.email,oldPassword);await updatePassword(auth.currentUser,newPassword);authUpdated=true;// Cerrar sesión para hacer un login limpio después\nawait signOut(auth);}catch(e){// No funcionó con temporal actual\n}}// Método 2c: Si nada funcionó, guardar la nueva contraseña como temporal en Firestore\nif(!authUpdated){// IMPORTANTE: Marcar requirePasswordChange como FALSE para evitar el ciclo\nawait updateDoc(doc(firestore,'users',currentUser.uid),{tempPassword:btoa(newPassword),requirePasswordChange:false,// IMPORTANTE: false para evitar ciclo\nfirstLogin:false,passwordChangedAt:new Date().toISOString(),lastTempPassword:btoa(oldPassword),resetMethod:'FALLBACK_FIRESTORE',authPasswordSynced:false,needsAuthSync:true});setSuccessMessage('✅ Contraseña actualizada correctamente. La página se recargará en 3 segundos...');// Esperar y recargar la página\nsetTimeout(()=>{window.location.reload();},3000);return;// Salir aquí para usar el flujo especial\n}}else{throw createError;}}// Si llegamos aquí, la contraseña se actualizó en Auth exitosamente\nif(authUpdated){// Verificar si el documento existe en Firestore antes de actualizar\nconst userDocRef=doc(firestore,'users',currentUser.uid);const userDocSnap=await getDoc(userDocRef);if(userDocSnap.exists()){// Actualizar en Firestore (limpiar campos temporales)\nawait updateDoc(userDocRef,{requirePasswordChange:false,firstLogin:false,passwordChangedAt:new Date().toISOString(),tempPassword:null,lastTempPassword:null,resetMethod:null,authPasswordSynced:true,needsAuthSync:false});}else{// Si no existe, crear el documento\nawait setDoc(userDocRef,{email:currentUser.email,role:currentUser.role||'worker',name:currentUser.name||'',requirePasswordChange:false,firstLogin:false,passwordChangedAt:new Date().toISOString(),tempPassword:null,lastTempPassword:null,resetMethod:null,authPasswordSynced:true,needsAuthSync:false});}setSuccessMessage('✅ Contraseña actualizada exitosamente');// Hacer login automático con la nueva contraseña\nsetTimeout(async()=>{try{// Asegurar que no hay sesión activa\nif(auth.currentUser){await signOut(auth);// Esperar un momento para asegurar que se cerró la sesión\nawait new Promise(resolve=>setTimeout(resolve,500));}// Iniciar sesión con la nueva contraseña\nconst userCredential=await signInWithEmailAndPassword(auth,currentUser.email,newPassword);const user=userCredential.user;// Obtener datos actualizados de Firestore con el UID correcto\nconst userDocRef=doc(firestore,'users',user.uid);const userDocSnap=await getDoc(userDocRef);if(userDocSnap.exists()){const userData=userDocSnap.data();onLogin({uid:user.uid,email:user.email,role:userData.role,name:userData.name,...userData,requirePasswordChange:false,firstLogin:false,isTempPasswordLogin:false});}else{// Si no existe con el UID de Auth, usar los datos que tenemos\nonLogin({...currentUser,uid:user.uid,requirePasswordChange:false,firstLogin:false,isTempPasswordLogin:false});}}catch(error){// Si falla el auto-login, continuar de todos modos\nonLogin({...currentUser,requirePasswordChange:false,firstLogin:false,isTempPasswordLogin:false});}},2000);// Aumentar el tiempo de espera\n}}else{// Usuario autenticado normalmente con Firebase Auth\nconst user=auth.currentUser;if(user){// Actualizar contraseña en Firebase Auth\nawait updatePassword(user,newPassword);// Actualizar en Firestore\nawait updateDoc(doc(firestore,'users',user.uid),{requirePasswordChange:false,firstLogin:false,passwordChangedAt:new Date().toISOString(),tempPassword:null,lastTempPassword:null,resetMethod:null});setSuccessMessage('✅ Contraseña actualizada exitosamente');// Esperar un momento antes de continuar\nsetTimeout(()=>{onLogin({...currentUser,requirePasswordChange:false,firstLogin:false});},2000);}else{setError('Error de autenticación. Por favor, vuelve a iniciar sesión');}}}catch(error){switch(error.code){case'auth/weak-password':setError('La contraseña es muy débil. Usa al menos 6 caracteres con letras y números');break;case'auth/requires-recent-login':setError('Por seguridad, vuelve a iniciar sesión');break;case'auth/network-request-failed':setError('Error de conexión. Verifica tu internet');break;default:setError('Error al cambiar la contraseña. Intenta nuevamente');}}finally{setLoading(false);}};// Formulario de cambio de contraseña obligatorio\nif(showChangePassword){return/*#__PURE__*/_jsxs(\"div\",{style:{width:'100%',height:'100vh',display:'flex',justifyContent:'center',alignItems:'center',background:'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',fontFamily:'Arial, sans-serif'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{background:'white',padding:'40px',borderRadius:'20px',boxShadow:'0 20px 40px rgba(0,0,0,0.1)',maxWidth:'400px',width:'90%'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',marginBottom:'30px'},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'48px',marginBottom:'10px'},children:\"\\uD83D\\uDD10\"}),/*#__PURE__*/_jsx(\"h2\",{style:{color:'#1f2937',margin:'0 0 10px 0',fontSize:'24px',fontWeight:'700'},children:\"Cambio de Contrase\\xF1a Obligatorio\"}),/*#__PURE__*/_jsx(\"p\",{style:{color:'#6b7280',margin:0,fontSize:'14px'},children:\"Por seguridad, debes cambiar tu contrase\\xF1a temporal\"})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleChangePassword,children:[/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"label\",{style:{display:'block',marginBottom:'8px',color:'#374151',fontSize:'14px',fontWeight:'500'},children:\"Nueva Contrase\\xF1a\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:newPassword,onChange:e=>setNewPassword(e.target.value),required:true,placeholder:\"M\\xEDnimo 6 caracteres con letras y n\\xFAmeros\",style:{width:'100%',padding:'12px',border:'1px solid #d1d5db',borderRadius:'8px',fontSize:'14px',outline:'none',transition:'border-color 0.2s'},onFocus:e=>e.target.style.borderColor='#667eea',onBlur:e=>e.target.style.borderColor='#d1d5db'})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'24px'},children:[/*#__PURE__*/_jsx(\"label\",{style:{display:'block',marginBottom:'8px',color:'#374151',fontSize:'14px',fontWeight:'500'},children:\"Confirmar Nueva Contrase\\xF1a\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value),required:true,placeholder:\"Repite la contrase\\xF1a\",style:{width:'100%',padding:'12px',border:'1px solid #d1d5db',borderRadius:'8px',fontSize:'14px',outline:'none',transition:'border-color 0.2s'},onFocus:e=>e.target.style.borderColor='#667eea',onBlur:e=>e.target.style.borderColor='#d1d5db'})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px',padding:'12px',background:'#f3f4f6',borderRadius:'6px',fontSize:'12px',color:'#6b7280'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Requisitos de la contrase\\xF1a:\"}),/*#__PURE__*/_jsxs(\"ul\",{style:{margin:'5px 0 0 0',paddingLeft:'20px'},children:[/*#__PURE__*/_jsx(\"li\",{children:\"M\\xEDnimo 6 caracteres\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Al menos una letra\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Al menos un n\\xFAmero\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Diferente a la contrase\\xF1a anterior\"})]})]}),error&&/*#__PURE__*/_jsx(\"div\",{style:{background:'#fef2f2',border:'1px solid #fecaca',color:'#dc2626',padding:'10px',borderRadius:'6px',marginBottom:'20px',fontSize:'14px',textAlign:'center'},children:error}),successMessage&&/*#__PURE__*/_jsx(\"div\",{style:{background:'#dcfce7',border:'1px solid #86efac',color:'#166534',padding:'10px',borderRadius:'6px',marginBottom:'20px',fontSize:'14px',textAlign:'center'},children:successMessage}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,style:{width:'100%',padding:'14px',background:loading?'#9ca3af':'linear-gradient(135deg, #22c55e 0%, #16a34a 100%)',color:'white',border:'none',borderRadius:'8px',fontSize:'16px',fontWeight:'600',cursor:loading?'not-allowed':'pointer',transition:'transform 0.2s',display:'flex',alignItems:'center',justifyContent:'center',gap:'8px'},children:loading?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"spinner\"}),\"Actualizando...\"]}):'✅ Cambiar Contraseña'})]})]}),/*#__PURE__*/_jsx(\"style\",{children:`\n          .spinner {\n            width: 16px;\n            height: 16px;\n            border: 2px solid #ffffff;\n            border-top-color: transparent;\n            border-radius: 50%;\n            animation: spin 0.6s linear infinite;\n          }\n          \n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n        `})]});}// Formulario de login principal\nreturn/*#__PURE__*/_jsxs(\"div\",{style:{width:'100%',height:'100vh',display:'flex',justifyContent:'center',alignItems:'center',background:'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',fontFamily:'Arial, sans-serif'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{background:'white',padding:'40px',borderRadius:'20px',boxShadow:'0 20px 40px rgba(0,0,0,0.1)',maxWidth:'400px',width:'90%'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',marginBottom:'30px'},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'48px',marginBottom:'10px'},children:\"\\uD83D\\uDDFA\\uFE0F\"}),/*#__PURE__*/_jsx(\"h1\",{style:{color:'#1f2937',margin:'0 0 10px 0',fontSize:'28px',fontWeight:'700'},children:\"MapaQuill\\xF3n\"}),/*#__PURE__*/_jsxs(\"p\",{style:{color:'#6b7280',margin:0,fontSize:'14px'},children:[\"Sistema de Control de Flota\",/*#__PURE__*/_jsx(\"br\",{}),\"Municipalidad de Quill\\xF3n\"]})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleLogin,children:[/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"label\",{style:{display:'block',marginBottom:'8px',color:'#374151',fontSize:'14px',fontWeight:'500'},children:\"Correo Electr\\xF3nico\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:email,onChange:e=>setEmail(e.target.value),required:true,placeholder:\"ejemplo@gmail.com\",style:{width:'100%',padding:'12px',border:'1px solid #d1d5db',borderRadius:'8px',fontSize:'14px',outline:'none',transition:'border-color 0.2s'},onFocus:e=>e.target.style.borderColor='#667eea',onBlur:e=>e.target.style.borderColor='#d1d5db'})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'12px'},children:[/*#__PURE__*/_jsx(\"label\",{style:{display:'block',marginBottom:'8px',color:'#374151',fontSize:'14px',fontWeight:'500'},children:\"Contrase\\xF1a\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true,placeholder:\"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\",style:{width:'100%',padding:'12px',border:'1px solid #d1d5db',borderRadius:'8px',fontSize:'14px',outline:'none',transition:'border-color 0.2s'},onFocus:e=>e.target.style.borderColor='#667eea',onBlur:e=>e.target.style.borderColor='#d1d5db'})]}),error&&/*#__PURE__*/_jsx(\"div\",{style:{background:'#fef2f2',border:'1px solid #fecaca',color:'#dc2626',padding:'10px',borderRadius:'6px',marginBottom:'20px',fontSize:'14px',textAlign:'center'},children:error}),successMessage&&/*#__PURE__*/_jsx(\"div\",{style:{background:'#dcfce7',border:'1px solid #86efac',color:'#166534',padding:'10px',borderRadius:'6px',marginBottom:'20px',fontSize:'14px',textAlign:'center'},children:successMessage}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,style:{width:'100%',padding:'14px',background:loading?'#9ca3af':'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',color:'white',border:'none',borderRadius:'8px',fontSize:'16px',fontWeight:'600',cursor:loading?'not-allowed':'pointer',transition:'transform 0.2s',display:'flex',alignItems:'center',justifyContent:'center',gap:'8px'},onMouseOver:e=>!loading&&(e.currentTarget.style.transform='translateY(-2px)'),onMouseOut:e=>e.currentTarget.style.transform='translateY(0px)',children:loading?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"spinner\"}),\"Iniciando sesi\\xF3n...\"]}):'Iniciar Sesión'}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>setShowPasswordRecovery(true),style:{width:'100%',padding:'12px',background:'transparent',color:'#3b82f6',border:'1px solid #3b82f6',borderRadius:'8px',fontSize:'14px',fontWeight:'500',cursor:'pointer',marginTop:'10px'},children:\"\\uD83D\\uDD13 \\xBFOlvidaste tu contrase\\xF1a?\"}),showPasswordRecovery&&/*#__PURE__*/_jsx(PasswordRecovery,{onClose:()=>setShowPasswordRecovery(false),onSuccess:()=>{setShowPasswordRecovery(false);setSuccessMessage('✅ Ya puedes iniciar sesión con tu contraseña temporal');setTimeout(()=>setSuccessMessage(''),5000);}})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'30px',padding:'15px',background:'#f9fafb',borderRadius:'8px',fontSize:'12px',color:'#6b7280',textAlign:'center'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\xBFNecesitas ayuda?\"}),/*#__PURE__*/_jsx(\"br\",{}),\"Contacta al administrador del sistema\",/*#__PURE__*/_jsx(\"br\",{}),\"\\uD83D\\uDCDE +56 9 1234 5678\"]})]}),/*#__PURE__*/_jsx(\"style\",{children:`\n        .spinner {\n          width: 16px;\n          height: 16px;\n          border: 2px solid #ffffff;\n          border-top-color: transparent;\n          border-radius: 50%;\n          animation: spin 0.6s linear infinite;\n          display: inline-block;\n        }\n        \n        @keyframes spin {\n          0% { transform: rotate(0deg); }\n          100% { transform: rotate(360deg); }\n        }\n      `})]});};export default Login;","map":{"version":3,"names":["React","useState","PasswordRecovery","signInWithEmailAndPassword","updatePassword","EmailAuthProvider","reauthenticateWithCredential","createUserWithEmailAndPassword","signOut","auth","firestore","doc","getDoc","updateDoc","query","where","collection","getDocs","setDoc","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Login","_ref","onLogin","email","setEmail","password","setPassword","loading","setLoading","error","setError","successMessage","setSuccessMessage","showChangePassword","setShowChangePassword","currentUser","setCurrentUser","newPassword","setNewPassword","confirmPassword","setConfirmPassword","oldPassword","setOldPassword","showPasswordRecovery","setShowPasswordRecovery","handleLogin","e","preventDefault","normalizedEmail","toLowerCase","trim","usersRef","q","querySnapshot","empty","userDoc","docs","userFirestoreData","data","userDocId","id","tempPassword","tempPasswordDecoded","atob","lastLogin","Date","toISOString","requirePasswordChange","uid","role","name","isTempPasswordLogin","userCredential","user","exists","userData","firstLogin","lastTempPassword","authError","code","storedPassword","needsAuthSync","firebaseUser","authPasswordSynced","syncError","handleChangePassword","length","hasNumber","test","hasLetter","authUpdated","oldUserDoc","oldUserData","passwordChangedAt","resetMethod","createError","lastTemp","btoa","setTimeout","window","location","reload","userDocRef","userDocSnap","Promise","resolve","style","width","height","display","justifyContent","alignItems","background","fontFamily","children","padding","borderRadius","boxShadow","maxWidth","textAlign","marginBottom","fontSize","color","margin","fontWeight","onSubmit","type","value","onChange","target","required","placeholder","border","outline","transition","onFocus","borderColor","onBlur","paddingLeft","disabled","cursor","gap","className","onMouseOver","currentTarget","transform","onMouseOut","onClick","marginTop","onClose","onSuccess"],"sources":["C:/Users/Izan/Desktop/AppReact/mapa-quillon/src/components/Login.js"],"sourcesContent":["// src/components/Login.js\r\nimport React, { useState } from 'react';\r\nimport PasswordRecovery from './PasswordRecovery';\r\nimport {\r\n  signInWithEmailAndPassword,\r\n  updatePassword,\r\n  EmailAuthProvider,\r\n  reauthenticateWithCredential,\r\n  createUserWithEmailAndPassword,\r\n  signOut\r\n} from 'firebase/auth';\r\nimport { auth, firestore } from '../config/firebase';\r\nimport { doc, getDoc, updateDoc, query, where, collection, getDocs, setDoc } from 'firebase/firestore';\r\n\r\nconst Login = ({ onLogin }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  // Estados para cambio de contraseña obligatorio\r\n  const [showChangePassword, setShowChangePassword] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [oldPassword, setOldPassword] = useState('');\r\n  const [showPasswordRecovery, setShowPasswordRecovery] = useState(false);\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n    setSuccessMessage('');\r\n\r\n    const normalizedEmail = email.toLowerCase().trim();\r\n\r\n    try {\r\n      // PRIMERO: Verificar si existe una contraseña temporal en Firestore\r\n      const usersRef = collection(firestore, 'users');\r\n      const q = query(usersRef, where('email', '==', normalizedEmail));\r\n      const querySnapshot = await getDocs(q);\r\n\r\n      if (!querySnapshot.empty) {\r\n        const userDoc = querySnapshot.docs[0];\r\n        const userFirestoreData = userDoc.data();\r\n        const userDocId = userDoc.id;\r\n\r\n        // Verificar si hay contraseña temporal\r\n        if (userFirestoreData.tempPassword) {\r\n          try {\r\n            const tempPasswordDecoded = atob(userFirestoreData.tempPassword);\r\n            \r\n            if (password === tempPasswordDecoded) {\r\n              // Login exitoso con contraseña temporal\r\n              // Actualizar última conexión\r\n              await updateDoc(doc(firestore, 'users', userDocId), {\r\n                lastLogin: new Date().toISOString()\r\n              });\r\n              \r\n              // SOLO marcar para cambio de contraseña si realmente lo requiere\r\n              if (userFirestoreData.requirePasswordChange === true) {\r\n                setCurrentUser({\r\n                  uid: userDocId,\r\n                  email: userFirestoreData.email,\r\n                  role: userFirestoreData.role,\r\n                  name: userFirestoreData.name,\r\n                  ...userFirestoreData,\r\n                  isTempPasswordLogin: true\r\n                });\r\n                setOldPassword(password);\r\n                setShowChangePassword(true);\r\n                setLoading(false);\r\n                return;\r\n              } else {\r\n                // La contraseña ya fue cambiada, continuar con login normal\r\n                onLogin({\r\n                  uid: userDocId,\r\n                  email: userFirestoreData.email,\r\n                  role: userFirestoreData.role,\r\n                  name: userFirestoreData.name,\r\n                  ...userFirestoreData\r\n                });\r\n                setLoading(false);\r\n                return;\r\n              }\r\n            }\r\n          } catch (e) {\r\n            // Error decodificando contraseña temporal\r\n          }\r\n        }\r\n      } else {\r\n        // No se encontró usuario en Firestore con ese email\r\n      }\r\n\r\n      // SEGUNDO: Si no es contraseña temporal o no coincide, intentar login normal con Firebase Auth\r\n      try {\r\n        const userCredential = await signInWithEmailAndPassword(auth, normalizedEmail, password);\r\n        const user = userCredential.user;\r\n\r\n        // Obtener datos del usuario desde Firestore usando el UID de Auth\r\n        const userDoc = await getDoc(doc(firestore, 'users', user.uid));\r\n\r\n        if (userDoc.exists()) {\r\n          const userData = userDoc.data();\r\n\r\n          // Verificar si debe cambiar contraseña\r\n          if (userData.requirePasswordChange || userData.firstLogin !== false) {\r\n            // Limpiar flags de contraseña temporal si existen\r\n            if (userData.tempPassword) {\r\n              await updateDoc(doc(firestore, 'users', user.uid), {\r\n                tempPassword: null,\r\n                lastTempPassword: userData.tempPassword // Guardar para referencia\r\n              });\r\n            }\r\n\r\n            setCurrentUser({\r\n              uid: user.uid,\r\n              email: user.email,\r\n              role: userData.role,\r\n              name: userData.name,\r\n              ...userData\r\n            });\r\n            setOldPassword(password);\r\n            setShowChangePassword(true);\r\n          } else {\r\n            // Login exitoso - actualizar última conexión\r\n            await updateDoc(doc(firestore, 'users', user.uid), {\r\n              lastLogin: new Date().toISOString()\r\n            });\r\n\r\n            // Login normal\r\n            onLogin({\r\n              uid: user.uid,\r\n              email: user.email,\r\n              role: userData.role,\r\n              name: userData.name,\r\n              ...userData\r\n            });\r\n          }\r\n        } else {\r\n          setError('No se encontraron datos del usuario');\r\n        }\r\n      } catch (authError) {\r\n        // Si falla el login con Firebase Auth, verificar si la contraseña está en Firestore como fallback\r\n        if (authError.code === 'auth/invalid-credential' || authError.code === 'auth/wrong-password') {\r\n          \r\n          // Buscar el usuario en Firestore nuevamente\r\n          const usersRef = collection(firestore, 'users');\r\n          const q = query(usersRef, where('email', '==', normalizedEmail));\r\n          const querySnapshot = await getDocs(q);\r\n          \r\n          if (!querySnapshot.empty) {\r\n            const userDoc = querySnapshot.docs[0];\r\n            const userFirestoreData = userDoc.data();\r\n            const userDocId = userDoc.id;\r\n            \r\n            // Verificar si hay una contraseña guardada en Firestore (fallback)\r\n            if (userFirestoreData.tempPassword) {\r\n              try {\r\n                const storedPassword = atob(userFirestoreData.tempPassword);\r\n                \r\n                if (password === storedPassword) {\r\n                  \r\n                  // Si needsAuthSync es true, intentar sincronizar\r\n                  if (userFirestoreData.needsAuthSync === true) {\r\n                    // Intentar sincronizar con Firebase Auth\r\n                    try {\r\n                      await createUserWithEmailAndPassword(auth, normalizedEmail, password);\r\n                      \r\n                      const firebaseUser = auth.currentUser;\r\n                      if (firebaseUser && firebaseUser.uid !== userDocId) {\r\n                        // Migrar datos al nuevo UID de Firebase\r\n                        \r\n                        // Crear nuevo documento con el UID de Firebase\r\n                        await setDoc(doc(firestore, 'users', firebaseUser.uid), {\r\n                          ...userFirestoreData,\r\n                          tempPassword: null, // Limpiar contraseña temporal\r\n                          needsAuthSync: false,\r\n                          authPasswordSynced: true,\r\n                          requirePasswordChange: false,\r\n                          lastLogin: new Date().toISOString()\r\n                        });\r\n                        \r\n                        // Cerrar sesión y usar el nuevo UID para el login\r\n                        await signOut(auth);\r\n                        \r\n                        onLogin({\r\n                          uid: firebaseUser.uid,\r\n                          email: userFirestoreData.email,\r\n                          role: userFirestoreData.role,\r\n                          name: userFirestoreData.name,\r\n                          ...userFirestoreData,\r\n                          requirePasswordChange: false\r\n                        });\r\n                      } else {\r\n                        // Limpiar flags de sincronización\r\n                        await updateDoc(doc(firestore, 'users', userDocId), {\r\n                          tempPassword: null, // Limpiar contraseña temporal ya sincronizada\r\n                          needsAuthSync: false,\r\n                          authPasswordSynced: true,\r\n                          requirePasswordChange: false,\r\n                          lastLogin: new Date().toISOString()\r\n                        });\r\n                        \r\n                        // Cerrar sesión\r\n                        if (auth.currentUser) {\r\n                          await signOut(auth);\r\n                        }\r\n                        \r\n                        // Login exitoso\r\n                        onLogin({\r\n                          uid: userDocId,\r\n                          email: userFirestoreData.email,\r\n                          role: userFirestoreData.role,\r\n                          name: userFirestoreData.name,\r\n                          ...userFirestoreData,\r\n                          requirePasswordChange: false\r\n                        });\r\n                      }\r\n                    } catch (syncError) {\r\n                      if (syncError.code === 'auth/email-already-in-use') {\r\n                        // El usuario ya existe en Auth, continuar sin sincronizar\r\n                      }\r\n                      \r\n                      // Actualizar última conexión\r\n                      await updateDoc(doc(firestore, 'users', userDocId), {\r\n                        lastLogin: new Date().toISOString()\r\n                      });\r\n                      \r\n                      // Login exitoso con Firestore\r\n                      onLogin({\r\n                        uid: userDocId,\r\n                        email: userFirestoreData.email,\r\n                        role: userFirestoreData.role,\r\n                        name: userFirestoreData.name,\r\n                        ...userFirestoreData,\r\n                        requirePasswordChange: false\r\n                      });\r\n                    }\r\n                  } else {\r\n                    // No necesita sincronización, login directo\r\n                    await updateDoc(doc(firestore, 'users', userDocId), {\r\n                      lastLogin: new Date().toISOString()\r\n                    });\r\n                    \r\n                    onLogin({\r\n                      uid: userDocId,\r\n                      email: userFirestoreData.email,\r\n                      role: userFirestoreData.role,\r\n                      name: userFirestoreData.name,\r\n                      ...userFirestoreData,\r\n                      requirePasswordChange: false\r\n                    });\r\n                  }\r\n                  \r\n                  setLoading(false);\r\n                  return;\r\n                }\r\n              } catch (e) {\r\n                // Error verificando contraseña de fallback\r\n              }\r\n            }\r\n          }\r\n        }\r\n        \r\n        // Si llegamos aquí, el login falló completamente\r\n        throw authError;\r\n      }\r\n    } catch (error) {\r\n      // Mensajes de error en español\r\n      switch (error.code) {\r\n        case 'auth/user-not-found':\r\n          setError('Usuario no encontrado. Verifica tu email');\r\n          break;\r\n        case 'auth/wrong-password':\r\n          setError('Contraseña incorrecta');\r\n          break;\r\n        case 'auth/invalid-email':\r\n          setError('Email inválido');\r\n          break;\r\n        case 'auth/too-many-requests':\r\n          setError('Demasiados intentos. Intenta más tarde');\r\n          break;\r\n        case 'auth/invalid-credential':\r\n          setError('Credenciales inválidas. Verifica tu email y contraseña');\r\n          break;\r\n        case 'auth/network-request-failed':\r\n          setError('Error de conexión. Verifica tu internet');\r\n          break;\r\n        default:\r\n          setError('Error al iniciar sesión. Intenta nuevamente');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleChangePassword = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validaciones\r\n    if (newPassword.length < 6) {\r\n      setError('La contraseña debe tener al menos 6 caracteres');\r\n      return;\r\n    }\r\n\r\n    if (newPassword !== confirmPassword) {\r\n      setError('Las contraseñas no coinciden');\r\n      return;\r\n    }\r\n\r\n    if (newPassword === oldPassword) {\r\n      setError('La nueva contraseña debe ser diferente a la anterior');\r\n      return;\r\n    }\r\n\r\n    // Validación adicional de seguridad\r\n    const hasNumber = /\\d/.test(newPassword);\r\n    const hasLetter = /[a-zA-Z]/.test(newPassword);\r\n    \r\n    if (!hasNumber || !hasLetter) {\r\n      setError('La contraseña debe contener al menos una letra y un número');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      // Verificar si es un login con contraseña temporal\r\n      if (currentUser.isTempPasswordLogin) {\r\n        \r\n        let authUpdated = false;\r\n        \r\n        // ESTRATEGIA MEJORADA: Intentar múltiples métodos para actualizar en Firebase Auth\r\n        \r\n        // Método 1: Intentar crear el usuario nuevo\r\n        try {\r\n          await createUserWithEmailAndPassword(auth, currentUser.email, newPassword);\r\n          authUpdated = true;\r\n          \r\n          // Si se creó exitosamente, obtener el UID real de Firebase Auth\r\n          const firebaseUser = auth.currentUser;\r\n          if (firebaseUser) {\r\n            // Actualizar el UID en Firestore si es diferente\r\n            if (currentUser.uid !== firebaseUser.uid) {\r\n              // Copiar datos del documento antiguo al nuevo\r\n              const oldUserDoc = await getDoc(doc(firestore, 'users', currentUser.uid));\r\n              const oldUserData = oldUserDoc.exists() ? oldUserDoc.data() : {};\r\n              \r\n              // Crear o actualizar el documento con el nuevo UID\r\n              await setDoc(doc(firestore, 'users', firebaseUser.uid), {\r\n                ...oldUserData,\r\n                email: currentUser.email,\r\n                requirePasswordChange: false,\r\n                firstLogin: false,\r\n                passwordChangedAt: new Date().toISOString(),\r\n                tempPassword: null,\r\n                lastTempPassword: null,\r\n                resetMethod: null,\r\n                authPasswordSynced: true\r\n              });\r\n              \r\n              // Actualizar el currentUser con el nuevo UID\r\n              currentUser.uid = firebaseUser.uid;\r\n            } else {\r\n              // Si el UID es el mismo, solo actualizar\r\n              await updateDoc(doc(firestore, 'users', currentUser.uid), {\r\n                requirePasswordChange: false,\r\n                firstLogin: false,\r\n                passwordChangedAt: new Date().toISOString(),\r\n                tempPassword: null,\r\n                lastTempPassword: null,\r\n                resetMethod: null,\r\n                authPasswordSynced: true\r\n              });\r\n            }\r\n            \r\n            // Cerrar sesión para hacer un login limpio después\r\n            await signOut(auth);\r\n          }\r\n        } catch (createError) {\r\n          \r\n          if (createError.code === 'auth/email-already-in-use') {\r\n            // Método 2: El usuario existe, intentar múltiples formas de actualizar\r\n            \r\n            // Método 2a: Intentar con la última contraseña temporal conocida\r\n            if (currentUser.lastTempPassword) {\r\n              try {\r\n                const lastTemp = atob(currentUser.lastTempPassword);\r\n                await signInWithEmailAndPassword(auth, currentUser.email, lastTemp);\r\n                await updatePassword(auth.currentUser, newPassword);\r\n                authUpdated = true;\r\n                // Cerrar sesión para hacer un login limpio después\r\n                await signOut(auth);\r\n              } catch (e) {\r\n                // No funcionó con última temporal\r\n              }\r\n            }\r\n            \r\n            // Método 2b: Intentar con la contraseña temporal actual\r\n            if (!authUpdated) {\r\n              try {\r\n                await signInWithEmailAndPassword(auth, currentUser.email, oldPassword);\r\n                await updatePassword(auth.currentUser, newPassword);\r\n                authUpdated = true;\r\n                // Cerrar sesión para hacer un login limpio después\r\n                await signOut(auth);\r\n              } catch (e) {\r\n                // No funcionó con temporal actual\r\n              }\r\n            }\r\n            \r\n            // Método 2c: Si nada funcionó, guardar la nueva contraseña como temporal en Firestore\r\n            if (!authUpdated) {\r\n              \r\n              // IMPORTANTE: Marcar requirePasswordChange como FALSE para evitar el ciclo\r\n              await updateDoc(doc(firestore, 'users', currentUser.uid), {\r\n                tempPassword: btoa(newPassword),\r\n                requirePasswordChange: false, // IMPORTANTE: false para evitar ciclo\r\n                firstLogin: false,\r\n                passwordChangedAt: new Date().toISOString(),\r\n                lastTempPassword: btoa(oldPassword),\r\n                resetMethod: 'FALLBACK_FIRESTORE',\r\n                authPasswordSynced: false,\r\n                needsAuthSync: true\r\n              });\r\n              \r\n              setSuccessMessage('✅ Contraseña actualizada correctamente. La página se recargará en 3 segundos...');\r\n              \r\n              // Esperar y recargar la página\r\n              setTimeout(() => {\r\n                window.location.reload();\r\n              }, 3000);\r\n              \r\n              return; // Salir aquí para usar el flujo especial\r\n            }\r\n          } else {\r\n            throw createError;\r\n          }\r\n        }\r\n\r\n        // Si llegamos aquí, la contraseña se actualizó en Auth exitosamente\r\n        if (authUpdated) {\r\n          // Verificar si el documento existe en Firestore antes de actualizar\r\n          const userDocRef = doc(firestore, 'users', currentUser.uid);\r\n          const userDocSnap = await getDoc(userDocRef);\r\n          \r\n          if (userDocSnap.exists()) {\r\n            // Actualizar en Firestore (limpiar campos temporales)\r\n            await updateDoc(userDocRef, {\r\n              requirePasswordChange: false,\r\n              firstLogin: false,\r\n              passwordChangedAt: new Date().toISOString(),\r\n              tempPassword: null,\r\n              lastTempPassword: null,\r\n              resetMethod: null,\r\n              authPasswordSynced: true,\r\n              needsAuthSync: false\r\n            });\r\n          } else {\r\n            // Si no existe, crear el documento\r\n            await setDoc(userDocRef, {\r\n              email: currentUser.email,\r\n              role: currentUser.role || 'worker',\r\n              name: currentUser.name || '',\r\n              requirePasswordChange: false,\r\n              firstLogin: false,\r\n              passwordChangedAt: new Date().toISOString(),\r\n              tempPassword: null,\r\n              lastTempPassword: null,\r\n              resetMethod: null,\r\n              authPasswordSynced: true,\r\n              needsAuthSync: false\r\n            });\r\n          }\r\n\r\n          setSuccessMessage('✅ Contraseña actualizada exitosamente');\r\n          \r\n          // Hacer login automático con la nueva contraseña\r\n          setTimeout(async () => {\r\n            try {\r\n              // Asegurar que no hay sesión activa\r\n              if (auth.currentUser) {\r\n                await signOut(auth);\r\n                // Esperar un momento para asegurar que se cerró la sesión\r\n                await new Promise(resolve => setTimeout(resolve, 500));\r\n              }\r\n              \r\n              // Iniciar sesión con la nueva contraseña\r\n              const userCredential = await signInWithEmailAndPassword(auth, currentUser.email, newPassword);\r\n              const user = userCredential.user;\r\n              \r\n              // Obtener datos actualizados de Firestore con el UID correcto\r\n              const userDocRef = doc(firestore, 'users', user.uid);\r\n              const userDocSnap = await getDoc(userDocRef);\r\n              \r\n              if (userDocSnap.exists()) {\r\n                const userData = userDocSnap.data();\r\n                onLogin({\r\n                  uid: user.uid,\r\n                  email: user.email,\r\n                  role: userData.role,\r\n                  name: userData.name,\r\n                  ...userData,\r\n                  requirePasswordChange: false,\r\n                  firstLogin: false,\r\n                  isTempPasswordLogin: false\r\n                });\r\n              } else {\r\n                // Si no existe con el UID de Auth, usar los datos que tenemos\r\n                onLogin({\r\n                  ...currentUser,\r\n                  uid: user.uid,\r\n                  requirePasswordChange: false,\r\n                  firstLogin: false,\r\n                  isTempPasswordLogin: false\r\n                });\r\n              }\r\n            } catch (error) {\r\n              // Si falla el auto-login, continuar de todos modos\r\n              onLogin({\r\n                ...currentUser,\r\n                requirePasswordChange: false,\r\n                firstLogin: false,\r\n                isTempPasswordLogin: false\r\n              });\r\n            }\r\n          }, 2000); // Aumentar el tiempo de espera\r\n        }\r\n        \r\n      } else {\r\n        // Usuario autenticado normalmente con Firebase Auth\r\n        const user = auth.currentUser;\r\n\r\n        if (user) {\r\n          // Actualizar contraseña en Firebase Auth\r\n          await updatePassword(user, newPassword);\r\n\r\n          // Actualizar en Firestore\r\n          await updateDoc(doc(firestore, 'users', user.uid), {\r\n            requirePasswordChange: false,\r\n            firstLogin: false,\r\n            passwordChangedAt: new Date().toISOString(),\r\n            tempPassword: null,\r\n            lastTempPassword: null,\r\n            resetMethod: null\r\n          });\r\n\r\n          setSuccessMessage('✅ Contraseña actualizada exitosamente');\r\n          \r\n          // Esperar un momento antes de continuar\r\n          setTimeout(() => {\r\n            onLogin({\r\n              ...currentUser,\r\n              requirePasswordChange: false,\r\n              firstLogin: false\r\n            });\r\n          }, 2000);\r\n        } else {\r\n          setError('Error de autenticación. Por favor, vuelve a iniciar sesión');\r\n        }\r\n      }\r\n\r\n    } catch (error) {\r\n      switch (error.code) {\r\n        case 'auth/weak-password':\r\n          setError('La contraseña es muy débil. Usa al menos 6 caracteres con letras y números');\r\n          break;\r\n        case 'auth/requires-recent-login':\r\n          setError('Por seguridad, vuelve a iniciar sesión');\r\n          break;\r\n        case 'auth/network-request-failed':\r\n          setError('Error de conexión. Verifica tu internet');\r\n          break;\r\n        default:\r\n          setError('Error al cambiar la contraseña. Intenta nuevamente');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Formulario de cambio de contraseña obligatorio\r\n  if (showChangePassword) {\r\n    return (\r\n      <div style={{\r\n        width: '100%',\r\n        height: '100vh',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n        fontFamily: 'Arial, sans-serif'\r\n      }}>\r\n        <div style={{\r\n          background: 'white',\r\n          padding: '40px',\r\n          borderRadius: '20px',\r\n          boxShadow: '0 20px 40px rgba(0,0,0,0.1)',\r\n          maxWidth: '400px',\r\n          width: '90%'\r\n        }}>\r\n          <div style={{ textAlign: 'center', marginBottom: '30px' }}>\r\n            <div style={{ fontSize: '48px', marginBottom: '10px' }}>🔐</div>\r\n            <h2 style={{\r\n              color: '#1f2937',\r\n              margin: '0 0 10px 0',\r\n              fontSize: '24px',\r\n              fontWeight: '700'\r\n            }}>\r\n              Cambio de Contraseña Obligatorio\r\n            </h2>\r\n            <p style={{\r\n              color: '#6b7280',\r\n              margin: 0,\r\n              fontSize: '14px'\r\n            }}>\r\n              Por seguridad, debes cambiar tu contraseña temporal\r\n            </p>\r\n          </div>\r\n\r\n          <form onSubmit={handleChangePassword}>\r\n            <div style={{ marginBottom: '20px' }}>\r\n              <label style={{\r\n                display: 'block',\r\n                marginBottom: '8px',\r\n                color: '#374151',\r\n                fontSize: '14px',\r\n                fontWeight: '500'\r\n              }}>\r\n                Nueva Contraseña\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                value={newPassword}\r\n                onChange={(e) => setNewPassword(e.target.value)}\r\n                required\r\n                placeholder=\"Mínimo 6 caracteres con letras y números\"\r\n                style={{\r\n                  width: '100%',\r\n                  padding: '12px',\r\n                  border: '1px solid #d1d5db',\r\n                  borderRadius: '8px',\r\n                  fontSize: '14px',\r\n                  outline: 'none',\r\n                  transition: 'border-color 0.2s'\r\n                }}\r\n                onFocus={(e) => e.target.style.borderColor = '#667eea'}\r\n                onBlur={(e) => e.target.style.borderColor = '#d1d5db'}\r\n              />\r\n            </div>\r\n\r\n            <div style={{ marginBottom: '24px' }}>\r\n              <label style={{\r\n                display: 'block',\r\n                marginBottom: '8px',\r\n                color: '#374151',\r\n                fontSize: '14px',\r\n                fontWeight: '500'\r\n              }}>\r\n                Confirmar Nueva Contraseña\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                required\r\n                placeholder=\"Repite la contraseña\"\r\n                style={{\r\n                  width: '100%',\r\n                  padding: '12px',\r\n                  border: '1px solid #d1d5db',\r\n                  borderRadius: '8px',\r\n                  fontSize: '14px',\r\n                  outline: 'none',\r\n                  transition: 'border-color 0.2s'\r\n                }}\r\n                onFocus={(e) => e.target.style.borderColor = '#667eea'}\r\n                onBlur={(e) => e.target.style.borderColor = '#d1d5db'}\r\n              />\r\n            </div>\r\n\r\n            {/* Requisitos de contraseña */}\r\n            <div style={{\r\n              marginBottom: '20px',\r\n              padding: '12px',\r\n              background: '#f3f4f6',\r\n              borderRadius: '6px',\r\n              fontSize: '12px',\r\n              color: '#6b7280'\r\n            }}>\r\n              <strong>Requisitos de la contraseña:</strong>\r\n              <ul style={{ margin: '5px 0 0 0', paddingLeft: '20px' }}>\r\n                <li>Mínimo 6 caracteres</li>\r\n                <li>Al menos una letra</li>\r\n                <li>Al menos un número</li>\r\n                <li>Diferente a la contraseña anterior</li>\r\n              </ul>\r\n            </div>\r\n\r\n            {/* Mensajes */}\r\n            {error && (\r\n              <div style={{\r\n                background: '#fef2f2',\r\n                border: '1px solid #fecaca',\r\n                color: '#dc2626',\r\n                padding: '10px',\r\n                borderRadius: '6px',\r\n                marginBottom: '20px',\r\n                fontSize: '14px',\r\n                textAlign: 'center'\r\n              }}>\r\n                {error}\r\n              </div>\r\n            )}\r\n\r\n            {successMessage && (\r\n              <div style={{\r\n                background: '#dcfce7',\r\n                border: '1px solid #86efac',\r\n                color: '#166534',\r\n                padding: '10px',\r\n                borderRadius: '6px',\r\n                marginBottom: '20px',\r\n                fontSize: '14px',\r\n                textAlign: 'center'\r\n              }}>\r\n                {successMessage}\r\n              </div>\r\n            )}\r\n\r\n            <button\r\n              type=\"submit\"\r\n              disabled={loading}\r\n              style={{\r\n                width: '100%',\r\n                padding: '14px',\r\n                background: loading ? '#9ca3af' : 'linear-gradient(135deg, #22c55e 0%, #16a34a 100%)',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '8px',\r\n                fontSize: '16px',\r\n                fontWeight: '600',\r\n                cursor: loading ? 'not-allowed' : 'pointer',\r\n                transition: 'transform 0.2s',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                gap: '8px'\r\n              }}\r\n            >\r\n              {loading ? (\r\n                <>\r\n                  <span className=\"spinner\"></span>\r\n                  Actualizando...\r\n                </>\r\n              ) : (\r\n                '✅ Cambiar Contraseña'\r\n              )}\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        <style>{`\r\n          .spinner {\r\n            width: 16px;\r\n            height: 16px;\r\n            border: 2px solid #ffffff;\r\n            border-top-color: transparent;\r\n            border-radius: 50%;\r\n            animation: spin 0.6s linear infinite;\r\n          }\r\n          \r\n          @keyframes spin {\r\n            0% { transform: rotate(0deg); }\r\n            100% { transform: rotate(360deg); }\r\n          }\r\n        `}</style>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Formulario de login principal\r\n  return (\r\n    <div style={{\r\n      width: '100%',\r\n      height: '100vh',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n      fontFamily: 'Arial, sans-serif'\r\n    }}>\r\n      <div style={{\r\n        background: 'white',\r\n        padding: '40px',\r\n        borderRadius: '20px',\r\n        boxShadow: '0 20px 40px rgba(0,0,0,0.1)',\r\n        maxWidth: '400px',\r\n        width: '90%'\r\n      }}>\r\n        {/* Logo y título */}\r\n        <div style={{ textAlign: 'center', marginBottom: '30px' }}>\r\n          <div style={{ fontSize: '48px', marginBottom: '10px' }}>🗺️</div>\r\n          <h1 style={{\r\n            color: '#1f2937',\r\n            margin: '0 0 10px 0',\r\n            fontSize: '28px',\r\n            fontWeight: '700'\r\n          }}>\r\n            MapaQuillón\r\n          </h1>\r\n          <p style={{\r\n            color: '#6b7280',\r\n            margin: 0,\r\n            fontSize: '14px'\r\n          }}>\r\n            Sistema de Control de Flota<br />\r\n            Municipalidad de Quillón\r\n          </p>\r\n        </div>\r\n\r\n        {/* Formulario */}\r\n        <form onSubmit={handleLogin}>\r\n          <div style={{ marginBottom: '20px' }}>\r\n            <label style={{\r\n              display: 'block',\r\n              marginBottom: '8px',\r\n              color: '#374151',\r\n              fontSize: '14px',\r\n              fontWeight: '500'\r\n            }}>\r\n              Correo Electrónico\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n              placeholder=\"ejemplo@gmail.com\"\r\n              style={{\r\n                width: '100%',\r\n                padding: '12px',\r\n                border: '1px solid #d1d5db',\r\n                borderRadius: '8px',\r\n                fontSize: '14px',\r\n                outline: 'none',\r\n                transition: 'border-color 0.2s'\r\n              }}\r\n              onFocus={(e) => e.target.style.borderColor = '#667eea'}\r\n              onBlur={(e) => e.target.style.borderColor = '#d1d5db'}\r\n            />\r\n          </div>\r\n\r\n          <div style={{ marginBottom: '12px' }}>\r\n            <label style={{\r\n              display: 'block',\r\n              marginBottom: '8px',\r\n              color: '#374151',\r\n              fontSize: '14px',\r\n              fontWeight: '500'\r\n            }}>\r\n              Contraseña\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n              placeholder=\"••••••••\"\r\n              style={{\r\n                width: '100%',\r\n                padding: '12px',\r\n                border: '1px solid #d1d5db',\r\n                borderRadius: '8px',\r\n                fontSize: '14px',\r\n                outline: 'none',\r\n                transition: 'border-color 0.2s'\r\n              }}\r\n              onFocus={(e) => e.target.style.borderColor = '#667eea'}\r\n              onBlur={(e) => e.target.style.borderColor = '#d1d5db'}\r\n            />\r\n          </div>\r\n\r\n          {/* Mensajes */}\r\n          {error && (\r\n            <div style={{\r\n              background: '#fef2f2',\r\n              border: '1px solid #fecaca',\r\n              color: '#dc2626',\r\n              padding: '10px',\r\n              borderRadius: '6px',\r\n              marginBottom: '20px',\r\n              fontSize: '14px',\r\n              textAlign: 'center'\r\n            }}>\r\n              {error}\r\n            </div>\r\n          )}\r\n\r\n          {successMessage && (\r\n            <div style={{\r\n              background: '#dcfce7',\r\n              border: '1px solid #86efac',\r\n              color: '#166534',\r\n              padding: '10px',\r\n              borderRadius: '6px',\r\n              marginBottom: '20px',\r\n              fontSize: '14px',\r\n              textAlign: 'center'\r\n            }}>\r\n              {successMessage}\r\n            </div>\r\n          )}\r\n\r\n          {/* Botón de login */}\r\n          <button\r\n            type=\"submit\"\r\n            disabled={loading}\r\n            style={{\r\n              width: '100%',\r\n              padding: '14px',\r\n              background: loading ? '#9ca3af' : 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '8px',\r\n              fontSize: '16px',\r\n              fontWeight: '600',\r\n              cursor: loading ? 'not-allowed' : 'pointer',\r\n              transition: 'transform 0.2s',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              gap: '8px'\r\n            }}\r\n            onMouseOver={(e) => !loading && (e.currentTarget.style.transform = 'translateY(-2px)')}\r\n            onMouseOut={(e) => e.currentTarget.style.transform = 'translateY(0px)'}\r\n          >\r\n            {loading ? (\r\n              <>\r\n                <span className=\"spinner\"></span>\r\n                Iniciando sesión...\r\n              </>\r\n            ) : (\r\n              'Iniciar Sesión'\r\n            )}\r\n          </button>\r\n\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => setShowPasswordRecovery(true)}\r\n            style={{\r\n              width: '100%',\r\n              padding: '12px',\r\n              background: 'transparent',\r\n              color: '#3b82f6',\r\n              border: '1px solid #3b82f6',\r\n              borderRadius: '8px',\r\n              fontSize: '14px',\r\n              fontWeight: '500',\r\n              cursor: 'pointer',\r\n              marginTop: '10px'\r\n            }}\r\n          >\r\n            🔓 ¿Olvidaste tu contraseña?\r\n          </button>\r\n\r\n          {/* Modal de recuperación de contraseña */}\r\n          {showPasswordRecovery && (\r\n            <PasswordRecovery\r\n              onClose={() => setShowPasswordRecovery(false)}\r\n              onSuccess={() => {\r\n                setShowPasswordRecovery(false);\r\n                setSuccessMessage('✅ Ya puedes iniciar sesión con tu contraseña temporal');\r\n                setTimeout(() => setSuccessMessage(''), 5000);\r\n              }}\r\n            />\r\n          )}\r\n        </form>\r\n\r\n        {/* Información de contacto */}\r\n        <div style={{\r\n          marginTop: '30px',\r\n          padding: '15px',\r\n          background: '#f9fafb',\r\n          borderRadius: '8px',\r\n          fontSize: '12px',\r\n          color: '#6b7280',\r\n          textAlign: 'center'\r\n        }}>\r\n          <strong>¿Necesitas ayuda?</strong><br />\r\n          Contacta al administrador del sistema<br />\r\n          📞 +56 9 1234 5678\r\n        </div>\r\n      </div>\r\n\r\n      <style>{`\r\n        .spinner {\r\n          width: 16px;\r\n          height: 16px;\r\n          border: 2px solid #ffffff;\r\n          border-top-color: transparent;\r\n          border-radius: 50%;\r\n          animation: spin 0.6s linear infinite;\r\n          display: inline-block;\r\n        }\r\n        \r\n        @keyframes spin {\r\n          0% { transform: rotate(0deg); }\r\n          100% { transform: rotate(360deg); }\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}