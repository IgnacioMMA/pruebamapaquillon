{"ast":null,"code":"// src/utils/pdfToImage.js\nimport*as pdfjsLib from'pdfjs-dist';// ⚠️ CONFIGURACIÓN CORRECTA DEL WORKER\npdfjsLib.GlobalWorkerOptions.workerSrc=`//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;export const convertPdfToImage=async file=>{try{const arrayBuffer=await file.arrayBuffer();const pdf=await pdfjsLib.getDocument({data:arrayBuffer}).promise;const page=await pdf.getPage(1);const viewport=page.getViewport({scale:2.0});const canvas=document.createElement('canvas');const context=canvas.getContext('2d');canvas.height=viewport.height;canvas.width=viewport.width;await page.render({canvasContext:context,viewport:viewport}).promise;return new Promise(resolve=>{canvas.toBlob(blob=>{const imageFile=new File([blob],file.name.replace('.pdf','.jpg'),{type:'image/jpeg'});resolve(imageFile);},'image/jpeg',0.95);});}catch(error){console.error('Error convirtiendo PDF:',error);throw error;}};","map":{"version":3,"names":["pdfjsLib","GlobalWorkerOptions","workerSrc","version","convertPdfToImage","file","arrayBuffer","pdf","getDocument","data","promise","page","getPage","viewport","getViewport","scale","canvas","document","createElement","context","getContext","height","width","render","canvasContext","Promise","resolve","toBlob","blob","imageFile","File","name","replace","type","error","console"],"sources":["C:/Users/Izan/Desktop/AppReact/mapa-quillon/src/utils/pdfToImage.js"],"sourcesContent":["// src/utils/pdfToImage.js\r\nimport * as pdfjsLib from 'pdfjs-dist';\r\n\r\n// ⚠️ CONFIGURACIÓN CORRECTA DEL WORKER\r\npdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\r\n\r\nexport const convertPdfToImage = async (file) => {\r\n  try {\r\n    const arrayBuffer = await file.arrayBuffer();\r\n    const pdf = await pdfjsLib.getDocument({ data: arrayBuffer }).promise;\r\n    \r\n    const page = await pdf.getPage(1);\r\n    const viewport = page.getViewport({ scale: 2.0 });\r\n    const canvas = document.createElement('canvas');\r\n    const context = canvas.getContext('2d');\r\n    \r\n    canvas.height = viewport.height;\r\n    canvas.width = viewport.width;\r\n    \r\n    await page.render({\r\n      canvasContext: context,\r\n      viewport: viewport\r\n    }).promise;\r\n    \r\n    return new Promise((resolve) => {\r\n      canvas.toBlob((blob) => {\r\n        const imageFile = new File(\r\n          [blob], \r\n          file.name.replace('.pdf', '.jpg'),\r\n          { type: 'image/jpeg' }\r\n        );\r\n        resolve(imageFile);\r\n      }, 'image/jpeg', 0.95);\r\n    });\r\n    \r\n  } catch (error) {\r\n    console.error('Error convirtiendo PDF:', error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"AAAA;AACA,MAAO,GAAK,CAAAA,QAAQ,KAAM,YAAY,CAEtC;AACAA,QAAQ,CAACC,mBAAmB,CAACC,SAAS,CAAG,2CAA2CF,QAAQ,CAACG,OAAO,oBAAoB,CAExH,MAAO,MAAM,CAAAC,iBAAiB,CAAG,KAAO,CAAAC,IAAI,EAAK,CAC/C,GAAI,CACF,KAAM,CAAAC,WAAW,CAAG,KAAM,CAAAD,IAAI,CAACC,WAAW,CAAC,CAAC,CAC5C,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAP,QAAQ,CAACQ,WAAW,CAAC,CAAEC,IAAI,CAAEH,WAAY,CAAC,CAAC,CAACI,OAAO,CAErE,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAJ,GAAG,CAACK,OAAO,CAAC,CAAC,CAAC,CACjC,KAAM,CAAAC,QAAQ,CAAGF,IAAI,CAACG,WAAW,CAAC,CAAEC,KAAK,CAAE,GAAI,CAAC,CAAC,CACjD,KAAM,CAAAC,MAAM,CAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,CAC/C,KAAM,CAAAC,OAAO,CAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC,CAEvCJ,MAAM,CAACK,MAAM,CAAGR,QAAQ,CAACQ,MAAM,CAC/BL,MAAM,CAACM,KAAK,CAAGT,QAAQ,CAACS,KAAK,CAE7B,KAAM,CAAAX,IAAI,CAACY,MAAM,CAAC,CAChBC,aAAa,CAAEL,OAAO,CACtBN,QAAQ,CAAEA,QACZ,CAAC,CAAC,CAACH,OAAO,CAEV,MAAO,IAAI,CAAAe,OAAO,CAAEC,OAAO,EAAK,CAC9BV,MAAM,CAACW,MAAM,CAAEC,IAAI,EAAK,CACtB,KAAM,CAAAC,SAAS,CAAG,GAAI,CAAAC,IAAI,CACxB,CAACF,IAAI,CAAC,CACNvB,IAAI,CAAC0B,IAAI,CAACC,OAAO,CAAC,MAAM,CAAE,MAAM,CAAC,CACjC,CAAEC,IAAI,CAAE,YAAa,CACvB,CAAC,CACDP,OAAO,CAACG,SAAS,CAAC,CACpB,CAAC,CAAE,YAAY,CAAE,IAAI,CAAC,CACxB,CAAC,CAAC,CAEJ,CAAE,MAAOK,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CAC/C,KAAM,CAAAA,KAAK,CACb,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}